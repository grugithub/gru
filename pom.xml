<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github</groupId>
    <artifactId>gru</artifactId>
    <packaging>jar</packaging>
    <version>0.0.6</version>
    <name>gru</name>
    <description></description>
    <inceptionYear>2013</inceptionYear>
    <developers>
    </developers>
    <properties>
        <java.version>1.7</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <slf4j.version>1.7.2</slf4j.version>
        <!-- github server corresponds to entry in ~/.m2/settings.xml -->
        <github.global.server>github</github.global.server>
    </properties>
    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub ${project.artifactId} Repository</name>
            <url>https://raw.github.com/grugithub/${project.artifactId}/mvn-repo</url>
        </repository>
    </distributionManagement>
    <dependencies>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.1</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>2.1.5</version>
        </dependency>
        <dependency>
            <groupId>com.github.antlrjavaparser</groupId>
            <artifactId>antlr-java-parser</artifactId>
            <version>1.0.12</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.psclistens.gru</groupId>
            <artifactId>gru-annotations</artifactId>
            <version>0.0.3</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.15</version>
                <configuration>
                    <printSummary>true</printSummary>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <excludes>
                        <exclude>**/*_Roo_*</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
            </plugin>
            <!-- IDE -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <dependenciesAsLibraries>true</dependenciesAsLibraries>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
                <configuration>
                    <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <id>default-package</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>

                                <echo>Preparing files from: ${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}</echo>
                                <mkdir dir="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}"/>
                                <copy todir="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}">
                                    <fileset dir="${project.basedir}${file.separator}">
                                        <include name="*.md"/>
                                    </fileset>
                                </copy>

                                <echo>Preparing files from: ${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}bin</echo>
                                <mkdir dir="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}bin"/>
                                <copy todir="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}bin">
                                    <fileset dir="${project.basedir}${file.separator}gru${file.separator}bin">
                                        <include name="*"/>
                                    </fileset>
                                </copy>

                                <echo>Preparing files from: ${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}lib</echo>
                                <mkdir dir="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}lib"/>
                                <copy todir="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}lib">
                                    <fileset dir="${project.build.directory}${file.separator}lib">
                                        <include name="**/*.jar"/>
                                    </fileset>
                                </copy>

                                <echo>Preparing files from: ${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}bin</echo>
                                <mkdir dir="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}plugins"/>
                                <copy todir="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}plugins">
                                    <fileset dir="${project.basedir}${file.separator}gru${file.separator}">
                                        <include name="*.groovy"/>
                                    </fileset>
                                </copy>

                                <echo>Preparing files from: ${project.build.directory}${file.separator}${project.build.finalName}.jar</echo>
                                <copy todir="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}lib">
                                    <fileset dir="${project.build.directory}">
                                        <include name="${project.build.finalName}.jar"/>
                                    </fileset>
                                </copy>

                                <echo>Renaming file: ${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}lib${file.separator}gru.jar</echo>
                                <move file="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}lib${file.separator}${project.build.finalName}.jar"
                                      tofile="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}lib${file.separator}gru.jar"/>

                                <echo>Fixing line endings on file: ${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}bin${file.separator}gru</echo>
                                <fixcrlf file="${project.build.directory}${file.separator}zip${file.separator}gru-${project.version}${file.separator}bin${file.separator}gru"
                                        eol="unix"/>

                                <echo>Creating archive: ${project.build.directory}${file.separator}${project.build.finalName}.zip</echo>
                                <zip destfile="${project.build.directory}${file.separator}${project.build.finalName}.zip" basedir="${project.build.directory}${file.separator}zip"/>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
